% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmse_basis.R
\name{rmse.basis}
\alias{rmse.basis}
\title{Berekent RMSE van basismodel}
\usage{
rmse.basis(Data, Typemodel, BMS)
}
\arguments{
\item{Data}{Meetgegevens van één boomsoort-domeincombinatie (dataframe
zoals de dataframes die in de list teruggegeven worden door de functie
\code{initiatie()})}

\item{Typemodel}{"Basis" of "Lokaal"?}

\item{BMS}{Boomsoort}
}
\value{
Dataframe met rmse_domein (\code{rmseD}), rmse_Vlaams (\code{rmseVL}, niet voor
lokaal model) en \code{maxResid}
}
\description{
Deze functie berekent de rmse door cross-validatie op basis van 6 subsets.
Deze functie kan ook gebruikt worden voor het lokaal model (ze bepaalt het
verschil tussen de datasets op basis van het al dan niet aanwezig zijn van
een veld \code{DOMEIN_ID} in de dataset).  Opgelet!  In tegenstelling tot de
meeste functies van dit package werkt deze functie op basis van de
meetgegevens van 1 model.
Zie voorbeelden voor een methode om deze functie te kunnen
toepassen vertrekkend van meetgegevens (bv. \code{Data.lokaal}) of vertrekkend van
een model waar de meetgegevens uit gehaald kunnen worden (bv. \code{Basismodel}).

Deze functie berekent de rmse op basis van testgroepen en omvat de volgende
deelstappen:
\itemize{
\item metingen opdelen in 6 testgroepen (veld testgroep)
\item modellen fitten voor testgroepen, waarbij ze de functie \code{fit.basis()}
6 keer oproept
\item rmse berekenen voor domeinmodellen en Vlaams model op basis van
de gemeten waarden en schattingen voor de testgroepen
}
}
\examples{
library(dplyr)

#Dataset inladen voor het basismodel
Data <- testdataset()
Datalijst <- initiatie(Data)
Data.basis <- Datalijst[["Basis"]]

#De rmse berekenen voor een basismodel op basis van de dataset
Data.basis \%>\%
  group_by(
    BMS
  ) \%>\%
  do(
    rmse.basis(., "Basis", .data$BMS)
  ) \%>\%
  ungroup()

#Dataset inladen voor het lokaal model
Data.lokaal <- Data.basis \%>\%
  filter(DOMEIN_ID == "A")

#De rmse berekenen voor een lokaal model
Data.lokaal \%>\%
  group_by(
    BMS,
    DOMEIN_ID
  ) \%>\%
  do(
    rmse.basis(., "Lokaal", .data$BMS)
  ) \%>\%
  ungroup()

}
