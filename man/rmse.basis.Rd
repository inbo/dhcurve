% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmse_basis.R
\name{rmse.basis}
\alias{rmse.basis}
\title{RMSE berekenen van basismodel}
\usage{
rmse.basis(Data, Typemodel)
}
\arguments{
\item{Data}{meetgegevens (enkel nodig voor model per boomsoort-domein-combinatie)}

\item{Typemodel}{'Basis' of 'Lokaal'?}
}
\value{
dataframe met rmse_domein en rmse_Vlaams
}
\description{
Deze functie berekent de rmse op basis van testgroepen en omvat de volgende deelstappen:
}
\details{
- metingen opdelen in 6 testgroepen (veld testgroep)

- modellen fitten voor testgroepen, waarbij ze de functie fit.basis 6 keer oproept

- rmse berekenen voor domeinmodellen en Vlaams model op basis van testgroep-modellen

Deze functie is geschreven voor het basismodel, maar kan door een kleine aanpassing ook gebruikt worden voor het lokaal model (functie bepaalt verschil op basis van het al dan niet aanwezig zijn van een veld DOMEIN_ID in de dataset)

Opgelet!  In tegenstelling tot de meeste functies van dit package werkt deze functie op basis van de meetgegevens van 1 model.  Zie voorbeelden voor een methode om deze functie te kunnen toepassen vertrekkend van meetgegevens (bv. Data.lokaal) of vertrekkend van een model waar de meetgegevens uit gehaald kunnen worden (bv. Basismodel).

Vroegere param: Basismodel model per boomsoort als argument meegeven en hier de nodige gegevens uit halen  (Vermits de 2 hoofdfuncties waarin deze hulpfunctie opgeroepen wordt allebei het argument model beschikbaar hebben en de dataframe niet, lijkt het me het meest logisch om hier van het model te vertrekken, dan moet het script om de meetgegevens uit het model te halen, enkel in deze functie geschreven worden)  Een alternatief is vertrekken van het dataframe > 50 en min. 6 domeinen
}
\examples{
library(dplyr)
#nog datasets toevoegen om deze voorbeelden te kunnen runnen
\dontrun{
Data.lokaal \%>\%
  group_by_(
    ~BMS,
    ~DOMEIN_ID
  ) \%>\%
  do_(
    ~rmse.basis(., "Lokaal")
  ) \%>\%
  ungroup()

Basismodel \%>\%
  rowwise() \%>\%
  do_(
    ~rmse.basis(.$Model$data, "Basis")
  ) \%>\%
  ungroup()
}

}
