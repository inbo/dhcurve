on:
  push:
    branches-ignore:
      - main
      - master
      - ghpages

name: "check package"

jobs:
  check-package:
    runs-on: ubuntu-latest
    name: "check package"

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_SYSTEM_CLOCK_: false
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/jammy/latest"
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      ORCID_TOKEN: ${{ secrets.ORCID_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: release

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install system dependencies
        run: |
          sudo apt update

      - name: Install dependencies
        run: |
          install.packages("remotes")
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          remotes::install_cran("codemetar")
          remotes::install_github("inbo/checklist")
          #options(repos = c(inbo = "https://inbo.r-universe.dev", CRAN = "https://cloud.r-project.org"))
          #install.packages("checklist")
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check spelling
        run: |
          x <- checklist::check_spelling()
          print(x)
          if(length(x$.__enclos_env__$private$spelling$message) > 0) {
            stop("The spelling is not always correct. Please check the error message below.")
          }
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Check documentation and description
        run: |
          x <- checklist::check_description()
          x <- checklist::check_documentation(x)
          print(x)
          print("errors description")
          print(x$.__enclos_env__$private$errors$DESCRIPTION)
          print("errors documentation")
          print(x$.__enclos_env__$private$errors$documentation)
          if(length(x$.__enclos_env__$private$errors$DESCRIPTION) > 0 |
              length(x$.__enclos_env__$private$errors$documentation) > 0 |
              length(x$.__enclos_env__$private$warnings) != length(x$.__enclos_env__$private$allowed_warnings) |
              length(x$.__enclos_env__$private$notes) != length(x$.__enclos_env__$private$allowed_notes)
          ) {
           stop("The documentation and description is not always correct. Please check the error message above.")
          }
        shell: Rscript {0}

      - name: Check code coverage
        run: covr::codecov(quiet = FALSE)
        shell: Rscript {0}
